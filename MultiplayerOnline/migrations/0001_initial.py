# Generated by Django 4.0.1 on 2024-09-17 08:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChessLobbies',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('white_player', models.CharField(blank=True, max_length=100)),
                ('black_player', models.CharField(blank=True, max_length=100)),
                ('game_status', models.CharField(default='waiting', max_length=20)),
                ('nush_bet', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('this_chessboard', models.JSONField(default=dict)),
                ('winning_player', models.CharField(blank=True, max_length=100, null=True)),
                ('timer_black_player', models.PositiveIntegerField(default=10)),
                ('timer_white_player', models.PositiveIntegerField(default=10)),
                ('timer', models.PositiveIntegerField(default=10)),
                ('Nush_ChessCoin_bet', models.JSONField(default=list)),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('BR', 'Bronce'), ('PL', 'Plata'), ('OR', 'Oro'), ('DI', 'Diamante'), ('MA', 'Maestro'), ('GM', 'Gran Maestro')], default='BR', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MultiplayerOnline.division')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elo_rating', models.FloatField(default=1200, validators=[django.core.validators.MinValueValidator(0)])),
                ('games_played', models.PositiveIntegerField(default=0)),
                ('wins', models.PositiveIntegerField(default=0)),
                ('losses', models.PositiveIntegerField(default=0)),
                ('draws', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('result', models.CharField(choices=[('1-0', 'White Wins'), ('0-1', 'Black Wins'), ('0.5-0.5', 'Draw')], max_length=10)),
                ('player_black', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games_as_black', to='MultiplayerOnline.player')),
                ('player_white', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games_as_white', to='MultiplayerOnline.player')),
            ],
        ),
    ]
